@using PaginationTest.Models;
@using PagedList;
@using PagedList.Mvc;
@model  IPagedList<Product>
@{
    ViewBag.Title = "ProductList";
}

<h2 class="text-center">Pagination Test</h2>

<table id="paginationTest" class="table table-responsive table-bordered table-striped tablesorter-blue tablesorter" cellspacing="0">
    <thead>
        <tr>
            <th rowspan="2" style="vertical-align: middle">Id</th>
            <th rowspan="2" style="vertical-align: middle">Name</th>
            <th rowspan="2" style="vertical-align: middle">Price</th>
            <th colspan="2">Categories</th>
            <th rowspan="2" style="vertical-align: middle">Tags</th>
        </tr>
        <tr>
            <th>Category 1</th>
            <th>Category 2</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
            {
                if (!product.IsDisabled)
                {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>
                        @product.Categories.First().Name
                    </td>
                    <td>
                        @if (product.Categories.Count() > 1)
                        {
                            @product.Categories.Last().Name
                        }
                    </td>
                    <td>
                        @foreach (var tag in @product.Tags)
                        {
                            @tag
                            <br>
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<div class="text-center">
    @Html.PagedListPager(Model, page => Url.Action("ProductList", new { page, pageSize = Model.PageSize }))
    Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Products
    <br />
    Products per page

    @Html.DropDownList("PageSize", new SelectListItem[]
    { new SelectListItem() { Text = "5", Value = "5" },
    new SelectListItem() { Text = "10", Value = "10" },
    new SelectListItem() { Text = "15", Value = "15" }},
    new { @onchange = "CallChangefunc(this.value)" })

    <script>
        function CallChangefunc(val) {
            window.location.href = "/Product/ProductList?PageSize=" + val;
        }
    </script>
</div>